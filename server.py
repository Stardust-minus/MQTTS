from tester import Wav2TTS_infer
import argparse
import soundfile as sf
import pyloudnorm as pyln
import os
from pathlib import Path
import json
import random
from flask import Flask, request, Response
from io import BytesIO
import ffmpeg
from flask_cors import CORS
from text import symbols
from text.cleaner import clean_text
from torch.cuda import empty_cache
#from torch import compile
from scipy.io import wavfile
import json

# 读取配置文件
with open('args.json', 'r') as f:
    config = json.load(f)

# 创建ArgumentParser对象，并将配置文件中的内容作为命令行参数传递
parser = argparse.ArgumentParser()
parser.set_defaults(**config)

args = parser.parse_args()
spk_dict = {'丹恒': 0, '克拉拉': 1, '华劳斯': 2, '厨子': 3, '怀疑的患者': 4, '男声': 5, '穹': 6, '信使': 7, '亚伯拉罕': 8, '伊蕾恩': 9, '发抖的流浪者': 10, '古怪的大叔': 11, '史瓦罗': 12, '年长的患者': 14, '幻胧': 15, '彦卿': 16, '往昔的回声': 17, '拍卖会的工作人员': 18, '拍卖师': 19, '星核之声': 20, '晴霓': 21, '杰帕德': 22, '满怀期待的老人': 23, '焦躁的丹鼎司医士': 24, '素裳': 25, '绿芙蓉': 26, '罗刹': 27, '艾丝妲': 28, '阿来': 29, '黑塔': 30, '丹枢': 31, '守护者的意志': 32, '安东尼娜': 33, '小女孩': 34, '希露瓦': 35, '白露': 36, '神神叨叨的怪人': 37, '艾丽斯': 38, '荣仓终': 39, '讨嫌的小孩': 40, '说唱的流浪者': 41, '费斯曼': 42, '辛克尔': 43, '闹事的混混': 44, '停云': 45, '可可利亚': 46, '巴列维': 47, '帕梅拉': 48, '广大': 49, '托比': 50, '景元': 51, '梁沐': 52, '消沉的患者': 53, '管家奥斯威尔': 54, '缆车道操作员': 55, '螺丝咕姆': 56, '被俘的信徒': 57, '青镞': 58, '互助会会长': 59, '公输师傅': 60, '匹克': 61, '卡芙卡': 62, '可疑的矿工': 63, '大毫': 64, '奇怪的云骑': 65, '小贩': 66, '掘掘博士': 67, '苍老的声音': 68, '警觉的流浪者': 69, '驭空': 70, '药王秘传魁首': 71, '净砚': 72, '刻薄的小孩': 73, '半夏': 74, '卢卡': 75, '奥列格': 76, '娜塔莎': 77, '宝石专家': 78, '尤利安': 79, '怯懦的丹士': 80, '暴躁机器人': 81, '查宝': 82, '桑博': 83, '瓦尔特': 84, '眼花的老太太': 85, '铁卫': 86, '阿兰': 87, '雪衣': 88, '伦纳德': 89, '佩拉': 90, '保姆': 91, '卡波特': 92, '卢卡奇': 93, '女声': 94, '岩明': 95, '帕姆': 96, '帕斯卡': 97, '慈祥的老婆婆': 98, '放哨的队长': 99, '理查': 100, '芸慎': 101, '诺尔伯特': 102, '邓恩': 103, '防卫科员': 104, '阿伟': 105, '阿往': 106, '青雀': 107, '马虎的流浪者': 108, '三月七': 109, '云骑队长': 110, '刃': 112, '嚣张的小孩': 113, '埃里克': 114, '姬子': 115, '布洛妮娅': 116, '希儿': 117, '拍卖会工作人员': 118, '斯薇塔': 119, '星': 120, '松烟': 121, '歌蒂': 122, '符玄': 123, '紫月季': 124, '虎克': 125, '银狼': 126, '镜流': 127, '隐书': 128, '博士': 129, '大肉丸': 130, '花角玉将': 131, '丽玛': 132, '乌代': 133, '乌维': 134, '九条孝行': 135, '九条裟罗': 136, '伊萨克': 137, '佐西摩斯': 138, '健司': 139, '刻晴': 140, '加萨尼': 141, '北村': 142, '博易': 143, '卡维': 144, '卯师傅': 145, '可莉': 146, '唐娜': 147, '商华': 148, '埃舍尔': 149, '塔杰拉德卡尼': 150, '大慈树王': 151, '奥泰巴': 152, '威严的男子': 153, '宜年': 154, '宵宫': 155, '小仓澪': 156, '布洛克': 157, '库塞拉的信件': 158, '康纳': 159, '影': 160, '徐六石': 161, '悠策': 162, '成濑': 163, '拉伊德': 164, '拓真': 165, '新之丞': 166, '明俊': 167, '星火': 168, '景明': 169, '智树': 170, '有乐斋': 171, '木南杏奈': 172, '朱特': 173, '枫原万叶': 174, '歌特琳德': 175, '泽维尔': 176, '火炽之心': 177, '狼哥': 178, '玛乔丽': 179, '珊瑚': 180, '珐露珊母亲': 181, '琳琅': 182, '田铁嘴': 183, '盈丰': 184, '石壮': 185, '砂糖': 186, '神里绫华': 187, '稻生': 188, '竺子': 189, '绘星': 190, '罗巧': 191, '罗莎莉亚': 192, '胡尚': 193, '舍利夫': 194, '艾伦': 195, '荒泷一斗': 196, '莎拉': 197, '莫尔吉': 198, '西瓦尼': 199, '诗筠': 200, '迪希雅': 201, '采珊': 202, '钟离': 203, '阿圆': 204, '阿大': 205, '阿娜耶': 206, '阿山婆': 207, '阿拉夫': 208, '阿飞': 209, '雕像': 210, '雷泽': 211, '露瓦卜': 212, '香菱': 213, '龙二': 214, '三田': 215, '云叔': 216, '今谷香里': 217, '伊庭': 218, '伊洁贝儿': 219, '优菈': 220, '传次郎': 221, '伸夫': 222, '侍从丙': 223, '健谈的村民': 224, '六指乔瑟': 225, '兰巴德': 226, '冒失的帕拉德': 227, '冰封之心': 228, '凯瑟琳': 229, '加藤洋平': 230, '卡玛尔': 231, '周平': 232, '周良': 233, '哲平': 234, '夏洛蒂': 235, '娜德瓦': 236, '娜比雅': 237, '安柏': 238, '审问': 239, '尤苏波夫': 240, '巴达维': 241, '库塞拉': 242, '式大将': 243, '忠诚的侍从': 244, '愚人众先遣队': 245, '提问者': 246, '斯坦利': 247, '朱巴': 248, '李当': 249, '毗伽尔': 250, '浮游风蕈兽元素生命': 251, '海妮耶': 252, '爱德琳': 253, '独眼小僧': 254, '皮特': 255, '真': 256, '真昼': 257, '纳西妲': 258, '维多利亚': 259, '老孟': 260, '莱斯格': 261, '萨福万': 262, '铁算盘': 263, '银杏': 264, '长门幸子': 265, '阿守': 266, '阿汉格尔': 267, '阿祇': 268, '露子': 269, '飞飞': 270, '鲁希': 271, '贪婪的守卫': 272, '越石丸': 273, '七尾': 274, '中野志乃': 275, '丹吉尔': 276, '丽莎': 277, '五郎': 278, '亚拉': 279, '今泉': 280, '侍从甲': 281, '信博': 282, '元太': 283, '克列门特': 284, '克罗索': 285, '北斗': 286, '卡塔扬': 287, '吴老二': 288, '国王': 289, '埃勒曼': 290, '大隆': 291, '天目十五': 292, '天音': 293, '奥兹': 294, '巴沙尔': 295, '帕帕克': 296, '庆次郎': 297, '恶龙': 298, '戴派': 299, '斯万': 300, '早柚': 301, '晋优': 302, '暮夜剧团团长': 303, '木木': 304, '札齐': 305, '朱达尔': 306, '李丁': 307, '杜拉夫': 308, '松浦': 309, '枫': 310, '柊千里': 311, '楠楠': 312, '沙赫布特': 313, '法尔罗赫': 314, '特纳': 315, '独孤朔': 316, '玻瑞亚斯': 317, '瓦格纳': 318, '甘雨': 319, '石头': 320, '绮命': 321, '羽生田千鹤': 322, '老章': 323, '芙萝拉': 324, '莱依拉': 325, '莱蒂法': 326, '菲利克斯': 327, '菲谢尔': 328, '言笑': 329, '诺艾尔': 330, '赛诺': 331, '辛焱': 332, '迪娜泽黛': 333, '重佐': 334, '阿茂': 335, '阿金': 336, '阿雩': 337, '高老六': 338, '麦希尔': 339, '黑田': 340, '丹羽': 341, '乔尔': 342, '伊扎德': 343, '八重神子': 344, '凯亚': 345, '刀疤刘': 346, '吴船长': 347, '哈多': 348, '埃德': 349, '大辅': 350, '天叔': 351, '女士': 352, '孟迪尔': 353, '小五': 354, '帕纳': 355, '快刀陈': 356, '恕筠': 357, '提纳里': 358, '斯嘉莉': 359, '明博': 360, '景澄': 361, '松坂': 362, '柴毅': 363, '法哈德': 364, '泽田': 365, '派蒙': 366, '流浪者': 367, '海龙': 368, '深渊使徒': 369, '渡部': 370, '玛格丽特': 371, '玥辉': 372, '珐露珊': 373, '理水叠山真君': 374, '琴': 375, '瑶瑶': 376, '畅畅': 377, '留云借风真君': 378, '百识': 379, '纪香': 380, '纯也': 381, '绮良良': 382, '维卡斯': 383, '翰学': 384, '老高': 385, '舒伯特': 386, '良子': 387, '艾德里安': 388, '荒谷': 389, '荧': 390, '莫娜': 391, '葵': 392, '行秋': 393, '谢赫祖拜尔': 394, '贝雅特丽奇': 395, '费迪南德': 396, '逢岩': 397, '阿佩普': 398, '阿尼斯': 399, '阿幸': 400, '阿鸠': 401, '马姆杜': 402, '鹿野奈奈': 403, '齐米亚': 404, '七七': 405, '乾玮': 406, '今谷三郎': 407, '伊迪娅': 408, '佩尔西科夫': 409, '傅三儿': 410, '克洛达尔': 411, '公主': 412, '兴叔': 413, '卓也': 414, '博来': 415, '卡瓦贾': 416, '合成': 417, '嘉义': 418, '坎蒂丝': 419, '埃尔欣根': 420, '埃泽': 421, '塞琉斯': 422, '夜兰': 423, '安普叔': 424, '宏达': 425, '将司': 426, '岚姐': 427, '常九爷': 428, '平山': 429, '德拉夫什': 430, '忠明': 431, '悦': 432, '戴因斯雷布': 433, '文渊': 434, '木村': 435, '杰克': 436, '杰洛尼': 437, '枫原义庆': 438, '沙坎': 439, '洛成': 440, '清惠': 441, '狐妖': 442, '狗三儿': 443, '玛文': 444, '笼钓瓶一心': 445, '米沙勒': 446, '纳比尔': 447, '老贾': 448, '胡桃': 449, '脑海中回荡的声音': 450, '艾尔海森': 451, '艾莉丝': 452, '若心': 453, '萨塔尔': 454, '蒂玛乌斯': 455, '迪奥娜': 456, '酒井': 457, '阿二': 458, '阿利娅': 459, '阿塔': 460, '阿晃': 461, '阿洛瓦': 462, '阿诺德': 463, '陆行岩本真蕈元素生命': 464, '雷电将军': 465, '顺吉': 466, '魈': 467, '鹿野院平藏': 468, '黛比': 469, '久彦': 470, '乌宰尔': 471, '伊凡诺维奇': 472, '伊德里西': 473, '伯恩哈德': 474, '凝光': 475, '凯西娅': 476, '削月筑阳真君': 477, '劳伦斯': 478, '古山': 479, '古田': 480, '古谷升': 481, '奥拉夫': 482, '奥特': 483, '妮露': 484, '宁禄': 485, '宛烟': 486, '小乐': 487, '小川': 488, '岩夫': 489, '德田': 490, '慧心': 491, '托克': 492, '托马': 493, '掇星攫辰天君': 494, '旁白': 495, '昆恩': 496, '朱老板': 497, '村田': 498, '枫原景春': 499, '森彦': 500, '沙寅': 501, '河童': 502, '法拉': 503, '法拉娜': 504, '法赫尔': 505, '浮游水蕈兽元素生命': 506, '清刚': 507, '烟绯': 508, '珠函': 509, '百闻': 510, '知易': 511, '米卡': 512, '纪芳': 513, '罗纳克': 514, '自称渊上之物': 515, '艾琳': 516, '西拉杰': 517, '路爷': 518, '迪卢克': 519, '重云': 520, '钱德拉': 521, '阿三': 522, '阿夫辛': 523, '阿扎尔': 524, '阿米尔': 525, '霍夫曼': 526, '顺平': 527, '鬼婆婆': 528, '鹰司进': 529, '麻美': 530, '黑泽京之介': 531, '七叶寂照秘密主': 532, '上杉': 533, '久利须': 534, '乌纳因': 535, '伽吠毗陀': 536, '兴修': 537, '加福尔': 538, '卡莉娜': 539, '哈伦': 540, '哲夫': 541, '商人': 542, '嘉良': 543, '回声海螺': 544, '塔里克': 545, '夏妮': 546, '多莉': 547, '妮欧莎': 548, '安西': 549, '巫女': 550, '巴哈利': 551, '平井': 552, '幸德': 553, '德沃沙克': 554, '愚人众士官': 555, '愚蠢的窃贼': 556, '手岛': 557, '拉赫曼': 558, '斑目百兵卫': 559, '昌虎': 560, '有泽': 561, '杰娜姬': 562, '松鼠': 563, '查尔斯': 564, '正人': 565, '江舟': 566, '江蓠': 567, '法伊兹': 568, '浩司': 569, '淮安': 570, '深渊法师': 571, '深见': 572, '温迪': 573, '玛达赫': 574, '珊瑚宫心海': 575, '班尼特': 576, '申鹤': 577, '百晓': 578, '神里绫人': 579, '秀夫': 580, '稻城萤美': 581, '立本': 582, '纳赛尔': 583, '绮珊': 584, '老孙': 585, '老戴': 586, '耕一': 587, '艾伯特': 588, '芊芊': 589, '菲尔戈黛特': 590, '萍姥姥': 591, '萨赫哈蒂': 592, '萨齐因': 593, '薇尔': 594, '藤木': 595, '观海': 596, '谢尔盖': 597, '贝琳达': 598, '轰大叔': 599, '金忽律': 600, '长野原龙之介': 601, '阿尔卡米': 602, '阿贝多': 603, '高善': 604, '鲁哈维': 605, '麦凯什': 606, '一平': 607, '东升': 608, '久岐忍': 609, '九条镰治': 610, '云堇': 611, '亚卡巴': 612, '今谷佳祐': 613, '伊利亚斯': 614, '债务处理人': 615, '加藤信悟': 616, '卡西特': 617, '叶卡捷琳娜': 618, '哲瓦德': 619, '土门': 620, '埃洛伊': 621, '塞塔蕾': 622, '大和田': 623, '孝利': 624, '安武': 625, '小野寺': 626, '平野': 627, '拉齐': 628, '昆钧': 629, '星稀': 630, '朋义': 631, '朔次郎': 632, '望雅': 633, '柊慎介': 634, '柯莱': 635, '柴田': 636, '梢': 637, '沙扎曼': 638, '海芭夏': 639, '清水': 640, '琳': 641, '白术': 642, '空': 643, '符景': 644, '维拉夫': 645, '罗伊斯': 646, '老克': 647, '考特里亚': 648, '聪子': 649, '艾文': 650, '芭芭拉': 651, '芷巧': 652, '茂才公': 653, '莫塞伊思': 654, '莱昂': 655, '莺儿': 656, '菜菜子': 657, '达达利亚': 658, '迈蒙': 659, '里卡尔': 660, '长生': 661, '阿仁': 662, '阿巴图伊': 663, '阿扎木': 664, '阿斯法德': 665, '阿旭': 666, '阿桂': 667, '阿芬迪': 668, '韦尔纳': 669, '韵宁': 670, '陆景和': 671, '莫弈': 672, '夏彦': 673, '左然': 674}
args.phoneset = symbols
app = Flask(__name__)
CORS(app)
app.config['JSON_AS_ASCII'] = False
def find_wav_file(speaker_name):
    # 检查当前目录下是否有同名文件夹
    if os.path.isdir(f"./{speaker_name}"):
        # 随机选择一个.wav文件并返回路径
        wav_files = [f for f in os.listdir(f"./{speaker_name}") if f.endswith(".wav")]
        if wav_files:
            return os.path.join(f"./{speaker_name}", random.choice(wav_files))
    # 检查./Genshin目录下是否有同名文件夹
    if os.path.isdir("./Genshin"):
        if os.path.isdir(f"./Genshin/{speaker_name}"):
            wav_files = [f for f in os.listdir(f"./Genshin/{speaker_name}") if f.endswith(".wav")]
            if wav_files:
                return os.path.join(f"./Genshin/{speaker_name}", random.choice(wav_files))
    # 检查./Rail目录下是否有同名文件夹
    if os.path.isdir("./Rail"):
        if os.path.isdir(f"./Rail/{speaker_name}"):
            wav_files = [f for f in os.listdir(f"./Rail/{speaker_name}") if f.endswith(".wav")]
            if wav_files:
                return os.path.join(f"./Rail/{speaker_name}", random.choice(wav_files))
    # 如果三个目录中都不存在同名文件夹，则返回"Speaker Error"
    return "Speaker Error"
with open(args.config_path, 'r') as f:
    argdict = json.load(f)
    assert argdict['sample_rate'] == args.sample_rate, f"Sampling rate not consistent, stated {args.sample_rate}, but the model is trained on {argdict['sample_rate']}"
    argdict.update(args.__dict__)
    args.__dict__ = argdict

model = Wav2TTS_infer(args)
#model = compile(model)
model.cuda()
model.vocoder.generator.remove_weight_norm()
model.vocoder.encoder.remove_weight_norm()
model.eval()
@app.route("/",methods=['GET','POST'])
def main():
    meter = pyln.Meter(args.sample_rate)
    speaker = request.args.get('speaker')
    sid = spk_dict[speaker]
    print(speaker)
    text = request.args.get('text').replace("\n","")
    text = text +"。"
    print(text)
    if len(text) >=200:
         return "Too long text"
    if None in (speaker, text):
        return "Missing Parameter"
    wavs = find_wav_file(speaker)
    audio, sr = sf.read(wavs)
    loudness = meter.integrated_loudness(audio)
    audio = pyln.normalize.loudness(audio, loudness, -20.0)
    i_wavs = []
    i_wavs.append(audio)
    phones = clean_text(text)
    sids = []
    sids.append(int(sid))
    print(sid)
    i_phones = []
    i_phones.append(phones)
    print (f"Inferencing batch")
    synthetic = model(i_wavs,sids, i_phones)
    for s in synthetic:
        wav = BytesIO()
        wavfile.write(wav, 32000, s)
    empty_cache()
    return Response(wav.read(), mimetype="audio/wav")
if __name__ == '__main__':
    app.run(port=6842, host="0.0.0.0")
